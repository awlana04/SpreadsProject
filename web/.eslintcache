[{"/home/long1/Documents/Scripts/Projects/Prisma/SpreadsProject/web/src/index.tsx":"1","/home/long1/Documents/Scripts/Projects/Prisma/SpreadsProject/web/src/App.tsx":"2","/home/long1/Documents/Scripts/Projects/Prisma/SpreadsProject/web/src/routes.tsx":"3","/home/long1/Documents/Scripts/Projects/Prisma/SpreadsProject/web/src/pages/Search.tsx":"4","/home/long1/Documents/Scripts/Projects/Prisma/SpreadsProject/web/src/services/api.ts":"5","/home/long1/Documents/Scripts/Projects/Prisma/SpreadsProject/web/src/pages/Result.tsx":"6"},{"size":197,"mtime":1607343947000,"results":"7","hashOfConfig":"8"},{"size":161,"mtime":1607343947000,"results":"9","hashOfConfig":"8"},{"size":410,"mtime":1607554174994,"results":"10","hashOfConfig":"8"},{"size":11320,"mtime":1607566625126,"results":"11","hashOfConfig":"8"},{"size":116,"mtime":1607343947000,"results":"12","hashOfConfig":"8"},{"size":5214,"mtime":1607561869570,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"9ou5m6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"/home/long1/Documents/Scripts/Projects/Prisma/SpreadsProject/web/src/index.tsx",[],["28","29"],"/home/long1/Documents/Scripts/Projects/Prisma/SpreadsProject/web/src/App.tsx",[],"/home/long1/Documents/Scripts/Projects/Prisma/SpreadsProject/web/src/routes.tsx",[],"/home/long1/Documents/Scripts/Projects/Prisma/SpreadsProject/web/src/pages/Search.tsx",["30"],"/home/long1/Documents/Scripts/Projects/Prisma/SpreadsProject/web/src/services/api.ts",[],"/home/long1/Documents/Scripts/Projects/Prisma/SpreadsProject/web/src/pages/Result.tsx",["31"],"import React, { ChangeEvent, FormEvent, useEffect, useState } from 'react';\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\nimport { useParams } from 'react-router-dom';\n\nimport api from '../services/api';\n\nimport '../styles/pages/result.css'\n\ninterface data {\n  id: number;\n  razao_social: string;\n  uf: string;\n  telefone: number;\n  tipo_de_pessoa: string;\n  data_inclusao: number;\n  status_backoffice: string;\n  supervisao_prisma: string;\n  promotor_prisma: string;\n  chave_cliente_eps: number;\n  agnt: string;\n  nm_indicado: string;\n  opcoes: string;\n  gerente: string;\n  observacoes: string;\n}\n\ninterface dataParams {\n  id: string;\n};\n\nfunction Result() {\n  const { id } = useParams<dataParams>();\n\n  const [data, setData] = useState<data[]>([]);\n  const [promoter, setPromoter] = useState<string>('')\n  const [status, setStatus] = useState<string>('')\n  const [notes, setNotes] = useState<string>('')\n\n\n  useEffect(() => {\n    api.get(`conclude/${id}`).then(response => {\n      setData(response.data);\n      setPromoter(response.data[0].promotor_prisma)\n      setStatus(response.data[0].opcoes)\n      setNotes(response.data[0].observacoes)\n    });\n  }, []);\n\n  function handlePromoter(event: ChangeEvent<HTMLInputElement>) {\n    const text = event.target.value;\n    setPromoter(text)\n  }\n\n  function handleNotes(event: ChangeEvent<HTMLTextAreaElement>) {\n    const text = event.target.value;\n    setNotes(text)\n  }\n\n  function handleStatus(event: ChangeEvent<HTMLSelectElement>) {\n    const text = event.target.value;\n    setStatus(text)\n  }\n\n  async function handleSubmit(event: FormEvent) {\n    event.preventDefault()\n\n    const promotor_prisma = promoter\n    const observacoes = notes\n    const opcoes = status\n\n    const formData = {\n      promotor_prisma,\n      observacoes,\n      opcoes\n    }\n\n    const response = await api.put(`conclude/${id}`, formData)\n\n    setData(response.data)\n  }\n\n  return (\n    <div id=\"pageContainer\">\n      <div className=\"tableContainer\">\n        <Table className=\"table\">\n          <Thead>\n            <Tr>\n              <Th>ID</Th>\n              <Th>Razão social</Th>\n              <Th>Telefone</Th>\n              <Th>Tipo Pessoa</Th>\n              <Th>Data Inclusão</Th>\n              <Th>Chave EPS</Th>\n              <Th>Agente</Th>\n              <Th>Nome Indicado</Th>\n              <Th>Gerente</Th>\n              <Th>UF</Th>\n              <Th>Status Bko</Th>\n              <Th>Supervisor</Th>\n              <Th>Promotor</Th>\n              <Th>Status</Th>\n              <Th>Observações</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {data.map(item => (\n              <Tr key={item.id}>\n                <Td>{item.id ? item.id : 'NÃO INFORMADO'}</Td>\n                <Td>{item.razao_social ? item.razao_social : 'NÃO INFORMADO'}</Td>\n                <Td>{item.telefone ? item.telefone : 'NÃO INFORMADO'}</Td>\n                <Td>{item.tipo_de_pessoa ? item.tipo_de_pessoa : 'NÃO INFORMADO'}</Td>\n                <Td>{item.data_inclusao ? item.data_inclusao : 'NÃO INFORMADO'}</Td>\n                <Td>{item.chave_cliente_eps ? item.chave_cliente_eps : 'NÃO INFORMADO'}</Td>\n                <Td>{item.agnt ? item.agnt : 'NÃO INFORMADO'}</Td>\n                <Td>{item.nm_indicado ? item.nm_indicado : 'NÃO INFORMADO'}</Td>\n                <Td>{item.gerente ? item.gerente : 'NÃO INFORMADO'}</Td>\n                <Td>{item.uf ? item.uf : 'NÃO INFORMADO'}</Td>\n                <Td>{item.status_backoffice ? item.status_backoffice : 'NÃO INFORMADO'}</Td>\n                <Td>{item.supervisao_prisma ? item.supervisao_prisma : 'NÃO INFORMADO'}</Td>\n                <Td>{item.promotor_prisma ? item.promotor_prisma : <p className=\"empty\">SEM ATRIBUIÇÃO</p>}</Td>\n                <Td>{item.opcoes ? item.opcoes : <p className=\"empty\">SEM TRATATIVA</p>}</Td>\n                <Td>{item.observacoes ? item.observacoes : 'SEM OBSERVAÇÕES'}</Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n\n        <form onSubmit={handleSubmit} className=\"updateContainer\">\n          <input\n            type=\"text\"\n            value={promoter}\n            onChange={handlePromoter}\n            placeholder=\"DIGITE O NOME DO PROMOTOR\"\n            className=\"textInput\"\n          />\n          <textarea\n            value={notes}\n            onChange={handleNotes}\n            className=\"textArea\"\n            placeholder=\"OBSERVAÇÕES\"\n          />\n          <select className=\"selectBox\" placeholder=\"STATUS\" onChange={handleStatus}>\n            <option value={status}>{status}</option>\n            <option value=\"CLIENTE DESISTIU\">CLIENTE DESISTIU</option>\n            <option value=\"CLIENTE RECEBEU A MAQUINA\">CLIENTE RECEBEU A MAQUINA</option>\n            <option value=\"CLIENTE SEM INTERESSE\">CLIENTE SEM INTERESSE</option>\n            <option value=\"INSUCESSO NA TENTATIVA DE CONTATO\">INSUCESSO NA TENTATIVA DE CONTATO</option>\n            <option value=\"VENDA CONCLUIDA COM SUCESSO\">VENDA CONCLUIDA COM SUCESSO</option>\n          </select>\n          <button type=\"submit\" className=\"submitButton\" >SALVAR</button>\n        </form>\n\n      </div>\n    </div>\n  )\n};\n\nexport default Result;\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":null,"fatal":true,"severity":2,"message":"36","line":31,"column":0},{"ruleId":"37","severity":1,"message":"38","line":47,"column":6,"nodeType":"39","endLine":47,"endColumn":8,"suggestions":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"Parsing error: Merge conflict marker encountered.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["43"],"no-global-assign","no-unsafe-negation",{"desc":"44","fix":"45"},"Update the dependencies array to be: [id]",{"range":"46","text":"47"},[1191,1193],"[id]"]